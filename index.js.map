{"version":3,"file":"index.js","sourceRoot":"","sources":["../index.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2010-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */\n\nimport { sigV4ClientFactory } from './sigV4Client';\nimport { simpleHttpClientFactory } from './simpleHttpClient';\nimport { utils } from './utils';\n\nexport const apiGateway: any = {};\napiGateway.core = apiGateway.core || {};\n\napiGateway.core.apiGatewayClientFactory = {};\napiGateway.core.apiGatewayClientFactory.newClient = function(simpleHttpClientConfig, sigV4ClientConfig) {\n  const apiGatewayClient: any = {};\n  //Spin up 2 httpClients, one for simple requests, one for SigV4\n  apiGateway.core.sigV4ClientFactory = sigV4ClientFactory;\n  const sigV4Client = apiGateway.core.sigV4ClientFactory.newClient(sigV4ClientConfig);\n  apiGateway.core.simpleHttpClientFactory = simpleHttpClientFactory;\n  const simpleHttpClient = apiGateway.core.simpleHttpClientFactory.newClient(simpleHttpClientConfig);\n  apiGateway.core.utils = utils;\n\n  apiGatewayClient.makeRequest = function(request, authType, additionalParams, apiKey) {\n    //Default the request to use the simple http client\n    let clientToUse = simpleHttpClient;\n\n    //Attach the apiKey to the headers request if one was provided\n    if (apiKey !== undefined && apiKey !== '' && apiKey !== null) {\n      request.headers['x-api-key'] = apiKey;\n    }\n\n    if (\n      request.body === undefined ||\n      request.body === '' ||\n      request.body === null ||\n      Object.keys(request.body).length === 0\n    ) {\n      request.body = undefined;\n    }\n\n    // If the user specified any additional headers or query params that may not have been modeled\n    // merge them into the appropriate request properties\n    request.headers = apiGateway.core.utils.mergeInto(request.headers, additionalParams.headers);\n    request.queryParams = apiGateway.core.utils.mergeInto(request.queryParams, additionalParams.queryParams);\n\n    //If an auth type was specified inject the appropriate auth client\n    if (authType === 'AWS_IAM') {\n      clientToUse = sigV4Client;\n    }\n\n    //Call the selected http client to make the request, returning a promise once the request is sent\n    return clientToUse.makeRequest(request);\n  };\n  return apiGatewayClient;\n};\n\nexport const generateSdk = async (apiKey: string, rootPath: string) => {\n  const AWS = require('aws-sdk');\n  const ssm = new AWS.SSM({ region: 'eu-west-1' });\n  const shell = require('shelljs');\n  const fs = require('fs');\n  const path = require('path');\n  const JSZip = require('jszip');\n  const apiId = (await ssm.getParameter({ Name: apiKey }).promise()).Parameter.Value;\n  const zipName = `sdk.zip`;\n  const contents = `\n  aws apigateway get-sdk \\\n            --rest-api-id ${apiId} \\\n            --stage-name prod \\\n            --sdk-type javascript \\\n            ${zipName}\n  `;\n  const shellFilename = 'download-sdk.sh';\n  fs.writeFileSync(shellFilename, contents);\n  shell.exec(`sh ${shellFilename}`);\n  fs.unlinkSync(shellFilename);\n  fs.readFile(zipName, (err, data) => {\n    if (err) throw err;\n    const zip = new JSZip();\n    zip.loadAsync(data).then(async zipContents => {\n      const filename = Object.keys(zipContents.files).find(file => file.endsWith('apigClient.js'));\n      const sdkContents = `\n// Auto-generated by AWS Api Gateway, do not modify.\n\nimport uritemplate = require('uritemplate');\nimport { apiGateway } from '@nodes-links/util-aws-apigateway-helpers-sdk-libs';\n\n      ${(await zipContents.file(filename).async('string'))\n        .replace(`var apigClientFactory = {};`, `export const apigClientFactory:any = {};`)\n        .replace(`var apigClient = { };`, `const apigClient:any = { };`)\n        .replace(/uritemplate/g, `uritemplate.parse`)}\n      `;\n      fs.writeFileSync(path.join(rootPath, `sdk.ts`), sdkContents);\n      fs.unlinkSync(zipName);\n    });\n  });\n};\n"]}