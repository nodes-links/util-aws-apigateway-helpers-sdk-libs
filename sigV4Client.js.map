{"version":3,"file":"sigV4Client.js","sourceRoot":"","sources":["../sigV4Client.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright 2010-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *  http://aws.amazon.com/apache2.0\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed\r\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\r\n * express or implied. See the License for the specific language governing\r\n * permissions and limitations under the License.\r\n */\r\nimport CryptoJS = require('crypto-js');\r\nimport { utils } from './utils';\r\nconst axios = require('axios');\r\n\r\nexport const sigV4ClientFactory: any = {};\r\nsigV4ClientFactory.newClient = function(config) {\r\n  const AWS_SHA_256 = 'AWS4-HMAC-SHA256';\r\n  const AWS4_REQUEST = 'aws4_request';\r\n  const AWS4 = 'AWS4';\r\n  const X_AMZ_DATE = 'x-amz-date';\r\n  const X_AMZ_SECURITY_TOKEN = 'x-amz-security-token';\r\n  const HOST = 'host';\r\n  const AUTHORIZATION = 'Authorization';\r\n\r\n  function hash(value) {\r\n    return CryptoJS.SHA256(value);\r\n  }\r\n\r\n  function hexEncode(value) {\r\n    return value.toString(CryptoJS.enc.Hex);\r\n  }\r\n\r\n  function hmac(secret, value) {\r\n    return CryptoJS.HmacSHA256(value, secret, { asBytes: true });\r\n  }\r\n\r\n  function buildCanonicalRequest(method, path, queryParams, headers, payload) {\r\n    return (\r\n      method +\r\n      '\\n' +\r\n      buildCanonicalUri(path) +\r\n      '\\n' +\r\n      buildCanonicalQueryString(queryParams) +\r\n      '\\n' +\r\n      buildCanonicalHeaders(headers) +\r\n      '\\n' +\r\n      buildCanonicalSignedHeaders(headers) +\r\n      '\\n' +\r\n      hexEncode(hash(payload))\r\n    );\r\n  }\r\n\r\n  function hashCanonicalRequest(request) {\r\n    return hexEncode(hash(request));\r\n  }\r\n\r\n  function buildCanonicalUri(uri) {\r\n    return encodeURI(uri);\r\n  }\r\n\r\n  function buildCanonicalQueryString(queryParams) {\r\n    if (Object.keys(queryParams).length < 1) {\r\n      return '';\r\n    }\r\n\r\n    const sortedQueryParams = [];\r\n    for (const property in queryParams) {\r\n      if (queryParams.hasOwnProperty(property)) {\r\n        sortedQueryParams.push(property);\r\n      }\r\n    }\r\n    sortedQueryParams.sort();\r\n\r\n    let canonicalQueryString = '';\r\n    for (let i = 0; i < sortedQueryParams.length; i++) {\r\n      canonicalQueryString +=\r\n        sortedQueryParams[i] + '=' + fixedEncodeURIComponent(queryParams[sortedQueryParams[i]]) + '&';\r\n    }\r\n    return canonicalQueryString.substr(0, canonicalQueryString.length - 1);\r\n  }\r\n\r\n  function fixedEncodeURIComponent(str) {\r\n    return encodeURIComponent(str).replace(/[!'()*]/g, function(c) {\r\n      return (\r\n        '%' +\r\n        c\r\n          .charCodeAt(0)\r\n          .toString(16)\r\n          .toUpperCase()\r\n      );\r\n    });\r\n  }\r\n\r\n  function buildCanonicalHeaders(headers) {\r\n    let canonicalHeaders = '';\r\n    const sortedKeys = [];\r\n    for (const property in headers) {\r\n      if (headers.hasOwnProperty(property)) {\r\n        sortedKeys.push(property);\r\n      }\r\n    }\r\n    sortedKeys.sort();\r\n\r\n    for (let i = 0; i < sortedKeys.length; i++) {\r\n      canonicalHeaders += sortedKeys[i].toLowerCase() + ':' + headers[sortedKeys[i]] + '\\n';\r\n    }\r\n    return canonicalHeaders;\r\n  }\r\n\r\n  function buildCanonicalSignedHeaders(headers) {\r\n    const sortedKeys = [];\r\n    for (const property in headers) {\r\n      if (headers.hasOwnProperty(property)) {\r\n        sortedKeys.push(property.toLowerCase());\r\n      }\r\n    }\r\n    sortedKeys.sort();\r\n\r\n    return sortedKeys.join(';');\r\n  }\r\n\r\n  function buildStringToSign(datetime, credentialScope, hashedCanonicalRequest) {\r\n    return AWS_SHA_256 + '\\n' + datetime + '\\n' + credentialScope + '\\n' + hashedCanonicalRequest;\r\n  }\r\n\r\n  function buildCredentialScope(datetime, region, service) {\r\n    return datetime.substr(0, 8) + '/' + region + '/' + service + '/' + AWS4_REQUEST;\r\n  }\r\n\r\n  function calculateSigningKey(secretKey, datetime, region, service) {\r\n    return hmac(hmac(hmac(hmac(AWS4 + secretKey, datetime.substr(0, 8)), region), service), AWS4_REQUEST);\r\n  }\r\n\r\n  function calculateSignature(key, stringToSign) {\r\n    return hexEncode(hmac(key, stringToSign));\r\n  }\r\n\r\n  function buildAuthorizationHeader(accessKey, credentialScope, headers, signature) {\r\n    return (\r\n      AWS_SHA_256 +\r\n      ' Credential=' +\r\n      accessKey +\r\n      '/' +\r\n      credentialScope +\r\n      ', SignedHeaders=' +\r\n      buildCanonicalSignedHeaders(headers) +\r\n      ', Signature=' +\r\n      signature\r\n    );\r\n  }\r\n\r\n  const awsSigV4Client: any = {};\r\n  if (config.accessKey === undefined || config.secretKey === undefined) {\r\n    return awsSigV4Client;\r\n  }\r\n  awsSigV4Client.accessKey = utils.assertDefined(config.accessKey, 'accessKey');\r\n  awsSigV4Client.secretKey = utils.assertDefined(config.secretKey, 'secretKey');\r\n  awsSigV4Client.sessionToken = config.sessionToken;\r\n  awsSigV4Client.serviceName = utils.assertDefined(config.serviceName, 'serviceName');\r\n  awsSigV4Client.region = utils.assertDefined(config.region, 'region');\r\n  awsSigV4Client.endpoint = utils.assertDefined(config.endpoint, 'endpoint');\r\n\r\n  awsSigV4Client.makeRequest = function(request) {\r\n    const verb = utils.assertDefined(request.verb, 'verb');\r\n    const path = utils.assertDefined(request.path, 'path');\r\n    let queryParams = utils.copy(request.queryParams);\r\n    if (queryParams === undefined) {\r\n      queryParams = {};\r\n    }\r\n    let headers = utils.copy(request.headers);\r\n    if (headers === undefined) {\r\n      headers = {};\r\n    }\r\n\r\n    //If the user has not specified an override for Content type the use default\r\n    if (headers['Content-Type'] === undefined) {\r\n      headers['Content-Type'] = config.defaultContentType;\r\n    }\r\n\r\n    //If the user has not specified an override for Accept type the use default\r\n    if (headers['Accept'] === undefined) {\r\n      headers['Accept'] = config.defaultAcceptType;\r\n    }\r\n\r\n    let body = utils.copy(request.body);\r\n    if (body === undefined || verb === 'GET') {\r\n      // override request body and set to empty when signing GET requests\r\n      body = '';\r\n    } else {\r\n      body = JSON.stringify(body);\r\n    }\r\n\r\n    //If there is no body remove the content-type header so it is not included in SigV4 calculation\r\n    if (body === '' || body === undefined || body === null) {\r\n      delete headers['Content-Type'];\r\n    }\r\n\r\n    const datetime = new Date()\r\n      .toISOString()\r\n      .replace(/\\.\\d{3}Z$/, 'Z')\r\n      .replace(/[:\\-]|\\.\\d{3}/g, '');\r\n    headers[X_AMZ_DATE] = datetime;\r\n    // const parser = document.createElement('a');\r\n    // parser.href = awsSigV4Client.endpoint;\r\n    // headers[HOST] = parser.hostname;\r\n\r\n    const canonicalRequest = buildCanonicalRequest(verb, path, queryParams, headers, body);\r\n    const hashedCanonicalRequest = hashCanonicalRequest(canonicalRequest);\r\n    const credentialScope = buildCredentialScope(datetime, awsSigV4Client.region, awsSigV4Client.serviceName);\r\n    const stringToSign = buildStringToSign(datetime, credentialScope, hashedCanonicalRequest);\r\n    const signingKey = calculateSigningKey(\r\n      awsSigV4Client.secretKey,\r\n      datetime,\r\n      awsSigV4Client.region,\r\n      awsSigV4Client.serviceName\r\n    );\r\n    const signature = calculateSignature(signingKey, stringToSign);\r\n    headers[AUTHORIZATION] = buildAuthorizationHeader(awsSigV4Client.accessKey, credentialScope, headers, signature);\r\n    if (awsSigV4Client.sessionToken !== undefined && awsSigV4Client.sessionToken !== '') {\r\n      headers[X_AMZ_SECURITY_TOKEN] = awsSigV4Client.sessionToken;\r\n    }\r\n    // delete headers[HOST];\r\n\r\n    let url = config.endpoint + path;\r\n    const queryString = buildCanonicalQueryString(queryParams);\r\n    if (queryString !== '') {\r\n      url += '?' + queryString;\r\n    }\r\n\r\n    //Need to re-attach Content-Type if it is not specified at this point\r\n    if (headers['Content-Type'] === undefined) {\r\n      headers['Content-Type'] = config.defaultContentType;\r\n    }\r\n\r\n    const signedRequest = {\r\n      method: verb,\r\n      url: url,\r\n      headers: headers,\r\n      data: body\r\n    };\r\n    return axios(signedRequest);\r\n  };\r\n\r\n  return awsSigV4Client;\r\n};\r\n"]}