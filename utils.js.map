{"version":3,"file":"utils.js","sourceRoot":"","sources":["../utils.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright 2010-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *  http://aws.amazon.com/apache2.0\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed\r\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\r\n * express or implied. See the License for the specific language governing\r\n * permissions and limitations under the License.\r\n */\r\n\r\nexport const utils = {\r\n  assertDefined: function(object, name) {\r\n    if (object === undefined) {\r\n      // tslint:disable-next-line: no-string-throw\r\n      throw name + ' must be defined';\r\n    } else {\r\n      return object;\r\n    }\r\n  },\r\n  assertParametersDefined: function(params, keys, ignore) {\r\n    if (keys === undefined) {\r\n      return;\r\n    }\r\n    if (keys.length > 0 && params === undefined) {\r\n      params = {};\r\n    }\r\n    for (let i = 0; i < keys.length; i++) {\r\n      if (!utils.contains(ignore, keys[i])) {\r\n        utils.assertDefined(params[keys[i]], keys[i]);\r\n      }\r\n    }\r\n  },\r\n  parseParametersToObject: function(params, keys) {\r\n    if (params === undefined) {\r\n      return {};\r\n    }\r\n    const object = {};\r\n    for (let i = 0; i < keys.length; i++) {\r\n      object[keys[i]] = params[keys[i]];\r\n    }\r\n    return object;\r\n  },\r\n  contains: function(a, obj) {\r\n    if (a === undefined) {\r\n      return false;\r\n    }\r\n    let i = a.length;\r\n    while (i--) {\r\n      if (a[i] === obj) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  },\r\n  copy: function(obj) {\r\n    if (null == obj || 'object' !== typeof obj) return obj;\r\n    const copy = obj.constructor();\r\n    for (const attr in obj) {\r\n      if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];\r\n    }\r\n    return copy;\r\n  },\r\n  mergeInto: function(baseObj, additionalProps) {\r\n    if (null == baseObj || 'object' !== typeof baseObj) return baseObj;\r\n    const merged = baseObj.constructor();\r\n    for (const attr in baseObj) {\r\n      if (baseObj.hasOwnProperty(attr)) merged[attr] = baseObj[attr];\r\n    }\r\n    if (null == additionalProps || 'object' !== typeof additionalProps) return baseObj;\r\n    for (const attr in additionalProps) {\r\n      if (additionalProps.hasOwnProperty(attr)) merged[attr] = additionalProps[attr];\r\n    }\r\n    return merged;\r\n  }\r\n};\r\n"]}